policy_module(aipg, 1.100.1)

########################################
#
# Declarations
#

type aipg_t;
type aipg_exec_t;
init_daemon_domain(aipg_t, aipg_exec_t)

permissive aipg_t;

type aipg_initrc_exec_t;
init_script_file(aipg_initrc_exec_t)

type aipg_conf_t;
files_type(aipg_conf_t)

type aipg_var_lib_t;
files_type(aipg_var_lib_t)

type aipg_var_run_t;
files_type(aipg_var_run_t)

type aipg_port_t;
corenet_port(aipg_port_t)

########################################
#
# aipg local policy
#
allow aipg_t self:process { fork };

allow aipg_t self:fifo_file rw_fifo_file_perms;
allow aipg_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(aipg_t, aipg_conf_t, aipg_conf_t)
manage_files_pattern(aipg_t, aipg_conf_t, aipg_conf_t)

manage_dirs_pattern(aipg_t, aipg_var_lib_t, aipg_var_lib_t)
manage_files_pattern(aipg_t, aipg_var_lib_t, aipg_var_lib_t)
files_var_lib_filetrans(aipg_t, aipg_var_lib_t, { dir file })

manage_dirs_pattern(aipg_t, aipg_var_run_t, aipg_var_run_t)
manage_files_pattern(aipg_t, aipg_var_run_t, aipg_var_run_t)

sysnet_dns_name_resolve(aipg_t)
corenet_all_recvfrom_unlabeled(aipg_t)

allow aipg_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(aipg_t)
corenet_tcp_sendrecv_generic_node(aipg_t)
corenet_tcp_sendrecv_all_ports(aipg_t)
corenet_tcp_bind_generic_node(aipg_t)

gen_require(`
    type aipg_port_t;
')
allow aipg_t aipg_port_t:tcp_socket name_bind;

gen_require(`
    type aipg_port_t;
')
allow aipg_t aipg_port_t:tcp_socket name_connect;

domain_use_interactive_fds(aipg_t)

files_read_etc_files(aipg_t)

miscfiles_read_localization(aipg_t)

sysnet_dns_name_resolve(aipg_t)

allow aipg_t aipg_exec_t:file execute_no_trans;
allow aipg_t self:process setsched;
corecmd_exec_ls(aipg_t)
corenet_tcp_connect_http_port(aipg_t)
dev_read_urand(aipg_t)
fs_getattr_xattr_fs(aipg_t)
kernel_read_system_state(aipg_t)
